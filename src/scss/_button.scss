@import "variables";

/** new button design */
@mixin btnInner() {
  padding: 16.5px 25px;
  &.large {
    padding: 21.5px 30px;
  }
  &.small {
    padding: 8.5px 15px;
  }
}
@mixin btn($color, $bg, $bgHover) {
  color: $color;
  background: $bg;
  border-radius: 5px;
  border: 1px solid $bg;
  @include btnInner();
  
  &:hover:not(:disabled),
  .dropdown.show>& {
    color: $color;
    background-color: $bgHover;
    border-color: $bgHover;
  }
}

[class*=btn] {
  transition-property: background, color;
  transition-duration: 200ms;
}

.btn.btn-primary {
  @include btn($colorGsWhite, $colorPrimary, $colorPrimaryDark);
}
.btn.btn-primary-dark {
  @include btn($colorGsWhite, $colorPrimaryDark, $colorPrimary);
}
.btn.btn-secondary {
  @include btn($colorGsWhite, $colorSecondary, $colorSecondaryDark);
}
.btn.btn-black {
  @include btn($colorGsWhite, $colorGsBlack, $colorGsBody);
}
.btn.btn-grey {
  @include btn($colorGsWhite, $colorGsLabel, $colorGsPlaceholder);
}
.btn.btn-grey-light {
  @include btn($colorGsLabel, $colorGsBackground, rgba($colorGsBackground, 0.7));
}
.btn.btn-google {
  @include btn($colorGsWhite, $colorGoogle, $colorGoogleLight);
}
.btn.btn-facebook {
  @include btn($colorGsWhite, $colorFacebook, $colorFacebookLight);
}
.btn-success {
  @include btn($colorGsWhite, $colorSuccess, $colorSuccessDark);
}
.btn-error {
  @include btn($colorGsWhite, $colorError, $colorErrorDark);
}
.btn.btn-inactive {
  @include btn($colorGsPlaceholder, $colorGsBackground, rgba($colorGsBackground, 0.7));
}

@mixin btnOutline($color, $colorHover) {
  color: $color;
  border: 1px solid $color;
  @include btnInner();

  &:hover:not(:disabled) {
    color: $colorHover;
    background: $color;
    border-color: $color;
  }
}

.btn.btn-outline {
  @include btnOutline($colorPrimary, $colorGsWhite);
}
.btn.btn-outline-success {
  @include btnOutline($colorSuccess, $colorGsWhite);
}
.btn.btn-outline-error {
  @include btnOutline($colorError, $colorGsWhite);
}

.btn.btn-outline-body {
  @include btnOutline($colorGsBody, $colorGsWhite);
}

.btn.btn-outline-grey {
  @include btnOutline($colorGsLabel, $colorGsWhite);
}

// .btn.btn-outline-secondary (if needed)

@mixin btnText($color, $colorHover) {
  color: $color;
  border: 1px solid transparent;
  @include btnInner();
  &:hover:not(:disabled) {
    color: $colorHover;    
  }

}
.btn.btn-text {
  @include btnText($colorPrimary, $colorPrimaryDark);
}

.btn.btn-text-primary-dark {
  @include btnText($colorPrimaryDark, $colorPrimary);
}
.btn.btn-text-black,
.btn.btn-text-body {
  @include btnText($colorGsBody, $colorGsBlack);
}
.btn.btn-text-grey {
  @include btnText($colorGsLabel, $colorGsPlaceholder);
}
.btn.btn-text-lightgrey {
  @include btnText($colorGsBackground, white);
}
.btn.btn-text-error {
  @include btnText($colorError, $colorErrorDark);
}
.btn.btn-text-light {
  @include btnText($colorGsWhite, $colorGsLine);
}
.btn.btn-text-white {
  @include btnText($colorGsWhite, $colorGsBackground);
}




/** primary icon button */
@mixin btnIcon($color) {
  padding: 16.5px;
  color: $color;

  &.large {
    padding: 21.5px;
  }
  &.small {
    padding: 8.5px;
  }
}

.btn.btn-icon {
  @include btnIcon($colorPrimary)
}

.btn.btn-icon-grey {
  @include btnIcon($colorGsPlaceholder);
}
.btn.btn-icon-body {
  @include btnIcon($colorGsBody);
}
.btn.btn-icon-success {
  @include btnIcon($colorSuccess);
}
.btn.btn-icon-error {
  @include btnIcon($colorError);
}

.btn.btn-icon-white {
  @include btnIcon(white);
}


.btn:disabled {
  opacity: 0.7;
}

.btn:focus, .btn.focus,
.btn:not(:disabled):not(.disabled).active:focus, 
.btn:not(:disabled):not(.disabled):active:focus, 
.show>.btn.dropdown-toggle:focus {
  box-shadow: none;
}

.btn {
  >* {
    vertical-align: middle;
  }

  i+span,
  i+u,
  i+b {
    margin-left: 0.25em;
  }

  span+i,
  u+i,
  b+i {
    margin-left: 0.25em; 
  }
}